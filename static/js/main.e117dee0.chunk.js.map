{"version":3,"sources":["store/actions/contactsActions/contactsActionTypes.js","store/initialState.js","store/reducers/contactsReducer.js","store/actions/userActions/userActionTypes.js","store/reducers/userReducer.js","store/actions/bitcoinActions/bitcoinActionTypes.js","store/reducers/bitcoinReducer.js","store/reducers/index.js","store/configureStore.js","serviceWorker.js","utils/utils.js","services/userService.js","store/actions/userActions/userActions.js","services/bitcoinService.js","store/actions/bitcoinActions/bitcoinActions.js","utils/consts.js","pages/HomePage/HomePage.js","pages/SignupPage/SignupPage.js","pages/LoginPage/LoginPage.js","services/contactService.js","store/actions/contactsActions/contactsActions.js","components/SearchBox/SearchBox.js","components/ContactPreview/ContactPreview.js","components/ContactList/ContactList.js","pages/ContactAppPage/ContactApp.js","pages/ContactDetailsPage/ContactDetails.js","pages/ContactEditPage/ContactEdit.js","components/ChartContainer/ChartContainer.js","pages/ChartsPage/ChartsPage.js","App.js","index.js"],"names":["types","SET_CONTACTS_SEARCH_TERM","SET_CONTACTS","DELETE_CONTACT","contacts","filteredContacts","searchTerm","users","user","bitcoin","currency","confirmedTransactionsData","marketPricesData","SET_USER","combinedReducer","combineReducers","state","initialState","action","type","isFiltered","newContacts","filter","contact","_id","id","middlewares","thunk","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","getRandomInt","min","max","Math","ceil","floor","random","makeId","length","text","possible","i","charAt","getTodayAsInputVal","local","Date","setMinutes","getMinutes","getTimezoneOffset","toJSON","slice","createSortFuncTxt","txt","op","a","b","formatURL","url","params","Object","entries","forEach","name","value","replace","toString","login","signup","username","find","u","Promise","reject","utilService","coins","transactions","push","saveUsers","logout","currUserId","_store","LOGGEDINUSERKEY","createTransaction","amount","transaction","toId","to","at","currUser","currUserIdx","findIndex","splice","resolve","getLoggedUser","USERSKEY","_load","loggedUser","key","any","localStorage","JSON","stringify","str","parse","_setUser","loadLoggedUser","dispatch","userService","getCurrency","getMarketPrice","getConfirmedTransactions","Axios","get","res","data","ratesByDay","values","map","day","y","transByDay","_setCurrency","loadCurrency","bitcoinService","loadMarketPricesData","loadConfirmedTransactionsData","URLS","HOME","CONTACTS","LIST","ADD","DETAILS","EDIT","CHARTS","SIGNUP","LOGIN","HomePage","this","props","actions","icon","className","Component","connect","bindActionCreators","userActions","bitcoinActions","Signup","onChangeInput","e","setState","target","onSignup","swal","history","placeholder","onChange","onKeyDown","keyCode","onClick","undefined","Login","onLogin","getContacts","setTimeout","term","contactsToReturn","toLocaleLowerCase","includes","phone","email","sort","getContactById","deleteContact","index","saveContact","c","_updateContact","_addContact","getEmptyContact","_setContactsSearchTerm","_setContacts","loadContacts","contactService","SearchBox","reportChange","debounce","onSearchTermChange","React","withRouter","onDelete","utils","src","alt","stopPropagation","ContactApp","onContactDelete","isContactsLoaded","contactsSearchTerm","contactsActions","ContactDetails","ContactEdit","handleChange","newState","handleSubmit","preventDefault","onSubmit","color","title","subTitle","Charts","all","loadMarketPriceData","marketPriceData","App","exact","path","component","SignupPage","LoginPage","library","add","fas","fab","store","createStore","reducer","applyMiddleware","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","prompt"],"mappings":"2fAKeA,EALD,CACZC,yBAA0B,2BAC1BC,aAAc,eACdC,eAAgB,kBCHH,GACbC,SAAU,CAAEA,SAAU,KAAMC,iBAAkB,KAAMC,WAAY,IAChEC,MAAO,CAAEC,KAAM,MACfC,QAAS,CACPC,SAAU,KACVC,0BAA2B,KAC3BC,iBAAkB,O,mjBCHP,ICAAZ,EAHD,CACZa,SAAU,Y,mjBCEG,ICHA,EACC,eADD,EAEW,yBAFX,EAGoB,kC,mjBCApB,ICQAC,EANSC,YAAgB,CACtCX,SLHa,WAA4C,IAA3CY,EAA0C,uDAAlCC,EAAab,SAAUc,EAAW,uCACxD,OAAQA,EAAOC,MACb,KAAKnB,EAAME,aACT,OAAIgB,EAAOE,WACF,EAAP,GAAYJ,EAAZ,CAAmBX,iBAAkBa,EAAOd,WAErC,EAAP,GAAYY,EAAZ,CAAmBZ,SAAUc,EAAOd,WAGxC,KAAKJ,EAAMG,eACT,IAAMkB,EAAcL,EAAMZ,SAASkB,OACjC,SAAAC,GAAO,OAAIA,EAAQC,MAAQN,EAAOO,KAEpC,OAAO,EAAP,GAAYT,EAAZ,CAAmBZ,SAAUiB,IAE/B,KAAKrB,EAAMC,yBACT,OAAO,EAAP,GAAYe,EAAZ,CAAmBV,WAAYY,EAAOZ,aAExC,QACE,OAAOU,IKfXR,KHJa,WAAyC,IAAxCQ,EAAuC,uDAA/BC,EAAaV,MAAOW,EAAW,uCACrD,OAAQA,EAAOC,MACb,KAAKnB,EAAMa,SACT,OAAO,KAAKG,EAAZ,CAAmBR,KAAMU,EAAOV,OAClC,QACE,OAAOQ,IGAXP,QDLa,WAA2C,IAA1CO,EAAyC,uDAAjCC,EAAaR,QAASS,EAAW,uCACvD,OAAQA,EAAOC,MACb,KAAKnB,EACH,OAAO,KAAKgB,EAAZ,CAAmBN,SAAUQ,EAAOR,WAEtC,KAAKV,EACH,OAAO,KACFgB,EADL,CAEEL,0BAA2BO,EAAOP,4BAGtC,KAAKX,EACH,OAAO,KAAKgB,EAAZ,CAAmBJ,iBAAkBM,EAAON,mBAE9C,QACE,OAAOI,MEbPU,G,MAAc,CAACC,MAKN,ICETC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3B,QACfqB,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,K,uIC5ClD,OACbC,aA9CF,SAAsBC,EAAKC,GAGzB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,IAAQA,GA4CjDM,OAzCF,WAKE,IAL2B,IAAbC,EAAY,uDAAH,EACnBC,EAAO,GACPC,EACF,iEAEOC,EAAI,EAAGA,EAAIH,EAAQG,IAC1BF,GAAQC,EAASE,OAAOT,KAAKE,MAAMF,KAAKG,SAAWI,EAASF,SAE9D,OAAOC,GAkCPI,mBA/BF,WACE,IAAIC,EAAQ,IAAIC,KAEhB,OADAD,EAAME,WAAWF,EAAMG,aAAeH,EAAMI,qBACrCJ,EAAMK,SAASC,MAAM,EAAG,KA6B/BC,kBA1BF,SAA2BC,EAAKC,GAC9B,OAAO,SAACC,EAAGC,GACT,MAAW,MAAPF,EACEC,EAAEF,GAAOG,EAAEH,GACN,EACEE,EAAEF,GAAOG,EAAEH,IACZ,EAED,EAGLE,EAAEF,GAAOG,EAAEH,GACN,EACEE,EAAEF,GAAOG,EAAEH,IACZ,EAED,IAWbI,UAzDF,SAAmBC,EAAKC,GAItB,OAHAC,OAAOC,QAAQF,GAAQG,QAAQ,YAAoB,IAAD,mBAAjBC,EAAiB,KAAXC,EAAW,KAChDN,EAAMA,EAAIO,QAAJ,WAAgBF,GAAQC,EAAME,cAE/BR,ICFM,GACbS,QACAC,OAkBF,SAAgBC,GACd,GAAIpF,EAAMqF,KAAK,SAAAC,GAAC,OAAIA,EAAEF,WAAaA,IACjC,OAAOG,QAAQC,OACb,yDAEJ,IAAMvF,EAAO,CACXgB,IAAKwE,EAAYpC,SACjB+B,WACAM,MAAO,IACPC,aAAc,IAIhB,OAFA3F,EAAM4F,KAAK3F,GACX4F,IACOX,EAAME,IA9BbU,OAwCF,WACEC,EAAa,KACbC,EAAOC,EAAiB,OAzCxBC,kBA4CF,SAA2BlF,EAASmF,GAClC,IAAMC,EAAc,CAClBC,KAAMrF,EAAQC,IACdqF,GAAItF,EAAQ8D,KACZyB,GAAI,IAAI1C,KACRsC,UAEIK,EAAWxG,EAAMqF,KAAK,SAAApF,GAAI,OAAIA,EAAKgB,MAAQ8E,IAC3CU,EAAczG,EAAM0G,UAAU,SAAAzG,GAAI,OAAIA,EAAKgB,MAAQ8E,IAIzD,OAHAS,EAASb,aAAaC,KAAKQ,GAC3BpG,EAAM2G,OAAOF,EAAa,EAAGD,GAC7BX,IACON,QAAQqB,QAAQJ,IAvDvBK,iBAGIC,EAAW,eACXb,EAAkB,oBAEpBF,EAAagB,EAAMd,IAAoB,KACvCjG,EAAQ+G,EAAMD,IAAa,GAE/B,SAASD,IACP,IAAML,EAAWxG,EAAMqF,KAAK,SAAApF,GAAI,OAAIA,EAAKgB,MAAQ8E,IAEjD,OADKS,GAAUjB,QAAQC,OAAO,kBACvBD,QAAQqB,QAAQJ,GAmBzB,SAAStB,EAAME,GACb,IAAM4B,EAAahH,EAAMqF,KAAK,SAAApF,GAAI,OAAIA,EAAKmF,WAAaA,IAGxD,OAFAY,EAAOC,EAAiBe,EAAW/F,KACnC8E,EAAaiB,EAAW/F,IACjB4F,IAuBT,SAAShB,IACPG,EAAOc,EAAU9G,GAGnB,SAASgG,EAAOiB,EAAKC,GACnBC,aAAaF,GAAOG,KAAKC,UAAUH,GAGrC,SAASH,EAAME,GACb,IAAIK,EAAMH,aAAaF,IAAQ,OAC/B,OAAOG,KAAKG,MAAMD,GCxEpB,IAAME,EAAW,SAAAvH,GAAI,MAAK,CAAEW,KAAMnB,EAAMa,SAAUL,SA8DnC,IACbwH,eA7DqB,WACrB,6CAAO,WAAMC,GAAN,eAAApD,EAAA,8EAEgBqD,EAAYd,gBAF5B,cAEG5G,EAFH,yBAGIyH,EAASF,EAASvH,KAHtB,sCAKHuC,QAAQC,IAAI,wCAAZ,MALG,4DAAP,mDAAM,IA6DNyC,MAlDY,SAAAE,GACZ,6CAAO,WAAMsC,GAAN,eAAApD,EAAA,8EAEgBqD,EAAYzC,MAAME,GAFlC,cAEGnF,EAFH,yBAGIyH,EAASF,EAASvH,KAHtB,sCAKHuC,QAAQC,IAAI,0BAAZ,MALG,4DAAP,mDAAM,IAkDN0C,OAvCa,SAAAC,GACb,6CAAO,WAAMsC,GAAN,eAAApD,EAAA,8EAEgBqD,EAAYxC,OAAOC,GAFnC,cAEGnF,EAFH,yBAGIyH,EAASF,EAASvH,KAHtB,sCAKHuC,QAAQC,IAAI,2BAAZ,MALG,4DAAP,mDAAM,IAuCNqD,OA5Ba,WACb,6CAAO,WAAM4B,GAAN,SAAApD,EAAA,8EAEGqD,EAAY7B,SAFf,gCAGI4B,EAASF,EAAS,QAHtB,sCAKHhF,QAAQC,IAAI,2BAAZ,MALG,4DAAP,mDAAM,IA4BNyD,kBAjBwB,SAAClF,EAASmF,GAClC,6CAAO,WAAMuB,GAAN,eAAApD,EAAA,8EAEgBqD,EAAYzB,kBAAkBlF,EAASmF,GAFvD,cAEGlG,EAFH,yBAGIyH,EAASF,EAASvH,KAHtB,sCAKHuC,QAAQC,IAAI,2CAAZ,MALG,4DAAP,mDAAM,K,oBCpDO,IACbmF,Y,4CACAC,e,4CACAC,yB,0FAGF,4BAAAxD,EAAA,qEACoByD,KAAMC,IACtB,sDAFJ,cACQC,EADR,yBAISA,EAAIC,MAJb,0C,mEAOA,gCAAA5D,EAAA,qEACoByD,KAAMC,IACtB,0FAFJ,cACQC,EADR,OAIQC,EAAOD,EAAIC,KACXC,EAAaD,EAAKE,OAAOC,IAAI,SAAAC,GAAG,OAAIA,EAAIC,IALhD,kBAMSJ,GANT,0C,mEASA,gCAAA7D,EAAA,qEACoByD,KAAMC,IACtB,2FAFJ,cACQC,EADR,OAIQC,EAAOD,EAAIC,KACXM,EAAaN,EAAKE,OAAOC,IAAI,SAAAC,GAAG,OAAIA,EAAIC,IALhD,kBAMSC,GANT,0C,sBCrBA,IAAMC,GAAe,SAAAtI,GAAQ,MAAK,CAAES,KAAMnB,EAAoBU,aA0C/C,IACbuI,aAzCmB,wDAAM,WAAMhB,GAAN,eAAApD,EAAA,8EAEAqE,GAAef,cAFf,OAEjBzH,EAFiB,OAGvBuH,EAASe,GAAatI,IAHC,sDAKvBqC,QAAQC,IAAI,sBAAZ,MALuB,4DAAN,uDA0CnBmG,qBA3B2B,wDAAM,WAAMlB,GAAN,eAAApD,EAAA,8EAEZqE,GAAed,iBAFH,OAEzBK,EAFyB,OAG/BR,EAR8C,CAChD9G,KAAMnB,EACNY,iBAMgC6H,IAHC,sDAK/B1F,QAAQC,IAAI,sBAAZ,MAL+B,4DAAN,uDA4B3BoG,8BAboC,wDAAM,WAAMnB,GAAN,eAAApD,EAAA,8EAErBqE,GAAeb,2BAFM,OAElCI,EAFkC,OAGxCR,EARgE,CAClE9G,KAAMnB,EACNW,0BAMyC8H,IAHC,sDAKxC1F,QAAQC,IAAI,sBAAZ,MALwC,4DAAN,wDCnCzBqG,I,MAAO,CAClBC,KAAM,IACNC,SAAU,CACRC,KAAM,YACNC,IAAK,gBACLC,QAAS,eACTC,KAAM,qBAERC,OAAQ,UACRC,OAAQ,UACRC,MAAO,WCGHC,G,6TAGMC,KAAKC,MAAMC,QAAQlC,iB,sDAEzBjF,QAAQC,IAAI,eAAZ,M,wBAEIgH,KAAKC,MAAMC,QAAQjB,e,4IAGzB,OACE,iCACE,gCACE,qCAAWe,KAAKC,MAAMzJ,KAAOwJ,KAAKC,MAAMzJ,KAAKmF,SAAW,SACvDqE,KAAKC,MAAMzJ,MACV,4BACE,kBAAC,IAAD,CAAiB2J,KAAM,CAAC,MAAO,aADjC,UACuD,IACpDH,KAAKC,MAAMzJ,KAAKyF,OAGI,OAAxB+D,KAAKC,MAAMvJ,UACV,4BACE,kBAAC,IAAD,CAAiByJ,KAAM,CAAC,MAAO,SADjC,QACiD,IAC9CH,KAAKC,MAAMvJ,WAKjBsJ,KAAKC,MAAMzJ,MACV,0BAAM4J,UAAU,qBACd,iDACA,4BACGJ,KAAKC,MAAMzJ,KAAK0F,aAAa0C,IAAI,SAAAjC,GAAW,OAC3C,4BAAKgB,KAAKC,UAAUjB,SAK1BqD,KAAKC,MAAMzJ,MACX,8BACE,kBAAC,IAAD,CAAMqG,GAAIwC,GAAKQ,QAAf,+BAC8B,kBAAC,IAAD,CAAiBM,KAAK,uB,GAzCzCE,aAuERC,eAfS,SAAAtJ,GAAK,MAAK,CAChCR,KAAMQ,EAAMR,KAAKA,KACjBE,SAAUM,EAAMP,QAAQC,WAGC,SAAAuH,GAAQ,MAAK,CACtCiC,QAASK,YACP,CACEvC,eAAgBwC,GAAYxC,eAC5BiB,aAAcwB,GAAexB,cAE/BhB,KAIWqC,CAGbP,I,oBC1EIW,I,iNACJ1J,MAAQ,CAAE2E,SAAU,I,EACpBgF,cAAgB,SAAAC,GACd,EAAKC,SAAS,CAAElF,SAAUiF,EAAEE,OAAOxF,S,EAGrCyF,S,qBAAW,sBAAAlG,EAAA,8EAED,EAAKoF,MAAMC,QAAQxE,OAAO,EAAK1E,MAAM2E,UAFpC,OAGPqF,KAAK,WAAY,0BAA2B,WAC5C,EAAKH,SAAS,CAAElF,SAAU,KAC1B,EAAKsE,MAAMgB,QAAQ9E,KAAKkD,GAAKC,MALtB,gDAOP0B,KAAK,eAAD,KAAsB,SAPnB,uD,wEAUD,IAAD,OACP,OACE,6BAASZ,UAAU,eACjB,uCACA,2BACEjJ,KAAK,OACL+J,YAAY,4BACZ5F,MAAO0E,KAAKhJ,MAAM2E,SAClBwF,SAAUnB,KAAKW,cACfS,UAAW,SAAAR,GACS,KAAdA,EAAES,SAAgB,EAAKN,cAG/B,4BAAQO,QAAStB,KAAKe,UAAtB,WAEA,kBAAC,IAAD,CAAMlE,GAAIwC,GAAKS,OAAf,6B,GA/BaO,cAmDNC,oBACbiB,EAVyB,SAAAtD,GAAQ,MAAK,CACtCiC,QAASK,YACP,CACE7E,OAAQ8E,GAAY9E,QAEtBuC,KAIWqC,CAGbI,ICtDIc,I,iNACJxK,MAAQ,CAAE2E,SAAU,I,EACpBgF,cAAgB,SAAAC,GACd,EAAKC,SAAS,CAAElF,SAAUiF,EAAEE,OAAOxF,S,EAGrCmG,Q,qBAAU,sBAAA5G,EAAA,8EAEA,EAAKoF,MAAMC,QAAQzE,MAAM,EAAKzE,MAAM2E,UAFpC,OAGNqF,KAAK,WAAY,0BAA2B,WAC5C,EAAKH,SAAS,CAAElF,SAAU,KAC1B,EAAKsE,MAAMgB,QAAQ9E,KAAKkD,GAAKC,MALvB,gDAON0B,KAAK,eAAD,KAAsB,SAPpB,uD,wEAUA,IAAD,OACP,OACE,6BAASZ,UAAU,cACjB,qCACA,2BACEjJ,KAAK,OACL+J,YAAY,4BACZ5F,MAAO0E,KAAKhJ,MAAM2E,SAClBwF,SAAUnB,KAAKW,cACfS,UAAW,SAAAR,GACS,KAAdA,EAAES,SAAgB,EAAKI,aAG/B,4BAAQH,QAAStB,KAAKyB,SAAtB,UACA,kBAAC,IAAD,CAAM5E,GAAIwC,GAAKQ,QAAf,gC,GA9BYQ,cAkDLC,oBACbiB,EAVyB,SAAAtD,GAAQ,MAAK,CACtCiC,QAASK,YACP,CACE9E,MAAO+E,GAAY/E,OAErBwC,KAIWqC,CAGbkB,IChEa,I,MAAA,CACbE,YA0IF,SAAqBpL,GACnB,OAAO,IAAIwF,QAAQ,SAACqB,EAASpB,GAC3B4F,WAAW,WACT,IAyDUC,EAzDNC,EAAmBzL,GACnBE,IAyDRsL,GADcA,EAvDkBtL,GAwDpBwL,oBAxDND,EAyDCzL,GAASkB,OAAO,SAAAC,GACrB,OACEA,EAAQ8D,KAAKyG,oBAAoBC,SAASH,IAC1CrK,EAAQyK,MAAMF,oBAAoBC,SAASH,IAC3CrK,EAAQ0K,MAAMH,oBAAoBC,SAASH,MA3D3CzE,EAAa0E,EAnBNK,KAAK,SAACrH,EAAGC,GAClB,OAAID,EAAEQ,KAAKyG,oBAAsBhH,EAAEO,KAAKyG,qBAC9B,EAENjH,EAAEQ,KAAKyG,oBAAsBhH,EAAEO,KAAKyG,oBAC/B,EAGF,MAYJ,QAjJLK,eAqJF,SAAwB1K,GACtB,OAAO,IAAIqE,QAAQ,SAACqB,EAASpB,GAC3B,IAAMxE,EAAUnB,GAASwF,KAAK,SAAArE,GAAO,OAAIA,EAAQC,MAAQC,IACzDF,EAAU4F,EAAQ5F,GAAWwE,EAAO,cAAD,OAAetE,EAAf,mBAvJrC2K,cA2JF,SAAuB3K,GACrB,OAAO,IAAIqE,QAAQ,SAACqB,EAASpB,GAC3B,IAAMsG,EAAQjM,GAAS6G,UAAU,SAAA1F,GAAO,OAAIA,EAAQC,MAAQC,KAC7C,IAAX4K,GACFjM,GAAS8G,OAAOmF,EAAO,GAGzBlF,EAAQ/G,OAjKVkM,YAuLF,SAAqB/K,GACnB,OAAOA,EAAQC,IAnBjB,SAAwBD,GACtB,OAAO,IAAIuE,QAAQ,SAACqB,EAASpB,GAC3B,IAAMsG,EAAQjM,GAAS6G,UAAU,SAAAsF,GAAC,OAAIhL,EAAQC,MAAQ+K,EAAE/K,OACzC,IAAX6K,IACFjM,GAASiM,GAAS9K,GAEpB4F,EAAQ5F,KAaWiL,CAAejL,GATtC,SAAqBA,GACnB,OAAO,IAAIuE,QAAQ,SAACqB,EAASpB,GAC3BxE,EAAQC,IAAMwE,EAAYpC,SAC1BxD,GAAS+F,KAAK5E,GACd4F,EAAQ5F,KAKqCkL,CAAYlL,IAvL3DmL,gBA0LF,WACE,MAAO,CACLrH,KAAM,GACN4G,MAAO,GACPD,MAAO,OA3LL5L,GAAW,CACf,CACEoB,IAAK,2BACL6D,KAAM,aACN4G,MAAO,yBACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,gBACN4G,MAAO,4BACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,iBACN4G,MAAO,6BACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,cACN4G,MAAO,0BACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,iBACN4G,MAAO,6BACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,aACN4G,MAAO,yBACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,kBACN4G,MAAO,8BACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,cACN4G,MAAO,0BACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,kBACN4G,MAAO,8BACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,eACN4G,MAAO,2BACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,YACN4G,MAAO,wBACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,kBACN4G,MAAO,8BACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,eACN4G,MAAO,2BACPD,MAAO,qBAET,CACExK,IAAK,2BAEL6D,KAAM,iBACN4G,MAAO,6BACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,eACN4G,MAAO,2BACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,iBACN4G,MAAO,6BACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,cACN4G,MAAO,0BACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,eACN4G,MAAO,2BACPD,MAAO,qBAET,CACExK,IAAK,2BACL6D,KAAM,eACN4G,MAAO,2BACPD,MAAO,sBCzHX,IAAMW,GAAyB,SAAArM,GAAU,MAAK,CAC5Ca,KAAMnB,EAAMC,yBACZK,eAGIsM,GAAe,SAACxM,EAAUgB,GAAX,MAA2B,CAC9CD,KAAMnB,EAAME,aACZE,WACAgB,eA0Ba,IACbyL,aAxBmB,WAAsB,IAArBvM,EAAoB,uDAAP,GACjC,6CAAO,WAAM2H,GAAN,eAAApD,EAAA,qEAEHoD,EAAS2E,GAAa,OAAQtM,IAF3B,SAGewM,GAAepB,YAAYpL,GAH1C,cAGGkI,EAHH,OAIHP,EAAS2E,GAAapE,IAAOlI,IAC7B2H,EAAS0E,GAAuBrM,IAL7B,kBAMIkI,GANJ,qGAAP,mDAAM,IAwBN4D,cAXoB,SAAA3K,GAAE,6CAAI,WAAMwG,GAAN,SAAApD,EAAA,8EAElBiI,GAAeV,cAAc3K,GAFX,OAGxBwG,EAAS,CAAE9G,KAAMnB,EAAMG,eAAgBsB,OAHf,gHAAJ,wD,SCgBTsL,I,kBAtCb,WAAY9C,GAAQ,IAAD,8BACjB,4CAAMA,KAEDjJ,MAAQ,CACXV,WAAY2J,EAAM3J,YAGpB,EAAK0M,aAAeC,oBAAS,EAAKD,aAAc,KAP/B,E,gFAUA1M,GACjB0J,KAAKa,SAAS,CAAEvK,eAChB0J,KAAKgD,iB,qCAILhD,KAAKC,MAAMiD,mBAAmBlD,KAAKhJ,MAAMV,c,+BAGjC,IAAD,OACP,OACE,2BACE8J,UAAU,aACVjJ,KAAK,OACLmE,MAAO0E,KAAKhJ,MAAMV,WAClB6K,SAAU,SAAAP,GAAC,OAAI,EAAKsC,mBAAmBtC,EAAEE,OAAOxF,QAChD4F,YAAalB,KAAKC,MAAMiB,kB,GA3BRiC,IAAM9C,YC6Cf+C,I,YAAAA,YAxCQ,SAAC,GAAoC,IAAlC7L,EAAiC,EAAjCA,QAAS8L,EAAwB,EAAxBA,SAAUpC,EAAc,EAAdA,QAC3C,OACE,wBACEb,UAAU,eACVkB,QAAS,kBACPL,EAAQ9E,KACNmH,EAAMvI,UAAUsE,GAAKE,SAASG,QAAS,CAAEjI,GAAIF,EAAQC,SAIzD,yBAAK+L,IAAG,+BAA0BhM,EAAQC,IAAlC,aAAkDgM,IAAI,YAC7DjM,EAAQ8D,KAET,yBAAK+E,UAAU,WACb,kBAAC,IAAD,CACEvD,GAAIyG,EAAMvI,UAAUsE,GAAKE,SAASI,KAAM,CAAElI,GAAIF,EAAQC,MACtD8J,QAAS,SAAAV,GAAC,OAAIA,EAAE6C,oBAEhB,kBAAC,IAAD,CAAiBtD,KAAK,eAExB,4BACEC,UAAU,WACVkB,QAAS,SAAAV,GACPA,EAAE6C,kBACFJ,EAAS9L,EAAQC,OAGnB,kBAAC,IAAD,CAAiB2I,KAAK,gBC/BjB,YAAAF,GAAU,IACf7J,EAAuB6J,EAAvB7J,SAAUiN,EAAapD,EAAboD,SAClB,OACE,wBAAIjD,UAAU,gBACXhK,EAASwI,IAAI,SAAArH,GAAO,OACnB,kBAAC,GAAD,CACEiG,IAAKjG,EAAQC,IACbD,QAASA,EACT8L,SAAUA,QCCdK,G,2MAOJR,mB,sCAAqB,WAAM5M,GAAN,SAAAuE,EAAA,qEACb,EAAKoF,MAAMC,QAAQ2C,aAAavM,GADnB,yC,wDAIrBqN,gB,sCAAkB,WAAMlM,GAAN,SAAAoD,EAAA,qEACV,EAAKoF,MAAMC,QAAQkC,cAAc3K,GADvB,OAEhBsB,QAAQC,IAAI,EAAKiH,MAAM7J,UAFP,yC,yIATX4J,KAAKC,MAAM2D,kBACd5D,KAAKC,MAAMC,QAAQ2C,iB,+BAerB,OADA9J,QAAQC,IAAIgH,KAAKC,MAAMzJ,MAClBwJ,KAAKC,MAAMzJ,KAGd,6BAAS4J,UAAU,eACjB,yBAAKA,UAAU,WACb,kBAAC,GAAD,CACE9J,WAAY0J,KAAKC,MAAM4D,mBACvBX,mBAAoBlD,KAAKkD,mBACzBhC,YAAY,wBAEd,kBAAC,IAAD,CAAMrE,GAAIwC,GAAKE,SAASE,IAAKW,UAAU,oBACrC,kBAAC,IAAD,CAAiBD,KAAK,gBAIzBH,KAAKC,MAAM2D,iBACV5D,KAAKC,MAAM7J,SAASyD,OAAS,EAC3B,kBAAC,GAAD,CACEzD,SAAU4J,KAAKC,MAAM7J,SACrBiN,SAAUrD,KAAK2D,kBAGjB,oBAGF,cAzBuB,kBAAC,IAAD,CAAU9G,GAAIwC,GAAKQ,a,GAlB3BQ,aAiFVC,eAvBS,SAAAtJ,GACtB,IAAMZ,EAAWY,EAAMZ,SAASE,WAC5BU,EAAMZ,SAASC,iBACfW,EAAMZ,SAASA,SAEnB,MAAO,CACLwN,iBAA+B,OAAbxN,EAClBA,SAAUA,GAAY,GACtByN,mBAAoB7M,EAAMZ,SAASE,WACnCE,KAAMQ,EAAMR,KAAKA,OAIM,SAAAyH,GAAQ,MAAK,CACtCiC,QAASK,YACP,CACEsC,aAAciB,GAAgBjB,aAC9BT,cAAe0B,GAAgB1B,eAEjCnE,KAIWqC,CAGboD,ICzFmBK,I,iNACnB/M,MAAQ,CACNO,QAAS,M,EASX8L,S,qBAAW,sBAAAxI,EAAA,qEACHiI,GAAeV,cAAc,EAAKpL,MAAMO,QAAQE,IAD7C,OAET,EAAKwI,MAAMgB,QAAQ9E,KAAKkD,GAAKE,SAASC,MAF7B,yC,0MALD/H,EAAOuI,KAAKC,MAAMhI,MAAMgD,OAAxBxD,G,SACcqL,GAAeX,eAAe1K,G,OAA9CF,E,OACNyI,KAAKa,SAAS,CAAEtJ,Y,mIAQR,IAAD,OACCA,EAAYyI,KAAKhJ,MAAjBO,QACR,OACEA,GACE,6BAAS6I,UAAU,mBACjB,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAMvD,GAAIwC,GAAKE,SAASC,MACtB,kBAAC,IAAD,CAAiBW,KAAK,kBAExB,kBAAC,IAAD,CAAMtD,GAAIyG,EAAMvI,UAAUsE,GAAKE,SAASI,KAAM,CAAElI,GAAIF,EAAQC,OAC1D,kBAAC,IAAD,CAAiB2I,KAAK,UAExB,4BACEC,UAAU,WACVkB,QAAS,WACP,EAAK+B,aAGP,kBAAC,IAAD,CAAiBlD,KAAK,YAG1B,gCAAM5I,EAAQ8D,MACd,yBACEkI,IAAG,+BAA0BhM,EAAQC,IAAlC,aACHgM,IAAI,YAEN,4BACE,kBAAC,IAAD,CAAiBrD,KAAK,OADxB,IACiC5I,EAAQ0K,OAEzC,4BACE,kBAAC,IAAD,CAAiB9B,KAAK,UADxB,IACoC5I,EAAQyK,Y,GA9CV3B,c,uOCDvB2D,G,2MACnBhN,MAAQ,CACNO,QAAS,M,EAGX8L,S,qBAAW,sBAAAxI,EAAA,qEACHiI,GAAeV,cAAc,EAAKpL,MAAMO,QAAQE,IAD7C,OAET,EAAKwI,MAAMgB,QAAQ9E,KAAKkD,GAAKE,SAASC,MAF7B,yC,EAaXyE,aAAe,SAAArD,GACb,IAAMsD,E,uVAAQ,IAAQ,EAAKlN,MAAMO,SACjC2M,EAAStD,EAAEE,OAAOzF,MAAQuF,EAAEE,OAAOxF,MACnC,EAAKuF,SAAS,CAAEtJ,QAAS2M,K,EAG3BC,a,sCAAe,WAAMvD,GAAN,SAAA/F,EAAA,4DACb+F,EAAEwD,iBADW,SAEPtB,GAAeR,YAAY,EAAKtL,MAAMO,SAF/B,OAGO,EAAK0I,MAAjBgB,QACA9E,KAAKkD,GAAKE,SAASC,MAJd,yC,8PAbL/H,EAAOuI,KAAKC,MAAMhI,MAAMgD,OAAxBxD,I,gCAEgBqL,GAAeX,eAAe1K,G,OAA9CF,E,OACNyI,KAAKa,SAAS,CAAEtJ,Y,sBACXyI,KAAKa,SAAS,CAAEtJ,QAASuL,GAAeJ,oB,mIAgBvC,IAAD,OAEP,OADoB1C,KAAKhJ,MAAjBO,SAGJ,6BAAS6I,UAAU,gBACjB,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAMvD,GAAIwC,GAAKE,SAASC,MACtB,kBAAC,IAAD,CAAiBW,KAAK,kBAExB,4BACEC,UAAU,WACVkB,QAAS,WACP,EAAK+B,aAGP,kBAAC,IAAD,CAAiBlD,KAAK,YAG1B,0BAAMkE,SAAUrE,KAAKmE,cACnB,6BACE,kBAAC,IAAD,CAAiBhE,KAAK,SACtB,2BACEhJ,KAAK,OACLkE,KAAK,OACL8F,SAAUnB,KAAKiE,aACf3I,MAAO0E,KAAKhJ,MAAMO,QAAQ8D,QAG9B,6BACE,kBAAC,IAAD,CAAiB8E,KAAK,OACtB,2BACEhJ,KAAK,OACLkE,KAAK,QACL8F,SAAUnB,KAAKiE,aACf3I,MAAO0E,KAAKhJ,MAAMO,QAAQ0K,SAG9B,6BACE,kBAAC,IAAD,CAAiB9B,KAAK,UACtB,2BACEhJ,KAAK,OACLkE,KAAK,QACL8F,SAAUnB,KAAKiE,aACf3I,MAAO0E,KAAKhJ,MAAMO,QAAQyK,SAG9B,4BAAQ5B,UAAU,YAChB,kBAAC,IAAD,CAAiBD,KAAK,gB,GA9EKE,a,iBCJ1B,I,MAAA,SAAAJ,GAAU,IACfxB,EAAiCwB,EAAjCxB,KAAM6F,EAA2BrE,EAA3BqE,MAAOC,EAAoBtE,EAApBsE,MAAOC,EAAavE,EAAbuE,SAC5B,OACE,6BACE,4BAAKD,GACL,4BAAKC,GACL,kBAAC,cAAD,CAAY/F,KAAMA,GAChB,kBAAC,kBAAD,CAAgB6F,MAAOA,IACvB,kBAAC,mBAAD,UCFFG,G,oTAEI3I,QAAQ4I,IAAI,CAChB1E,KAAKC,MAAMC,QAAQd,gCACnBY,KAAKC,MAAMC,QAAQyE,wB,mIAKrB,OADA5L,QAAQC,IAAIgH,KAAKC,OAEf,6BAASG,UAAU,eACjB,sCACCJ,KAAKC,MAAM2E,iBACV,kBAAC,GAAD,CACEnG,KAAMuB,KAAKC,MAAM2E,gBACjBN,MAAM,YACNC,MAAM,eACNC,SAAS,mBAGZxE,KAAKC,MAAMtJ,2BACV,kBAAC,GAAD,CACE8H,KAAMuB,KAAKC,MAAMtJ,0BACjB2N,MAAM,SACNC,MAAM,yBACNC,SAAS,sB,GAzBAnE,aAuDNC,eAhBS,SAAAtJ,GAAK,MAAK,CAChC4N,gBAAiB5N,EAAMP,QAAQG,iBAC/BD,0BAA2BK,EAAMP,QAAQE,4BAGhB,SAAAsH,GAAQ,MAAK,CACtCiC,QAASK,YACP,CACEoE,oBAAqBlE,GAAetB,qBACpCC,8BACEqB,GAAerB,+BAEnBnB,KAIWqC,CAGbmE,IC3CII,G,iLAEF,OACE,kBAAC,IAAD,KACE,6BACE,6BACE,wBAAIzE,UAAU,YACZ,4BACE,kBAAC,IAAD,CAAS0E,OAAK,EAACjI,GAAIwC,GAAKC,MACtB,kBAAC,IAAD,CAAiBa,KAAK,WAG1B,4BACE,kBAAC,IAAD,CAAS2E,OAAK,EAACjI,GAAIwC,GAAKE,SAASC,MAC/B,kBAAC,IAAD,CAAiBW,KAAK,mBAG1B,4BACE,kBAAC,IAAD,CAAS2E,OAAK,EAACjI,GAAIwC,GAAKO,QACtB,kBAAC,IAAD,CAAiBO,KAAK,iBAGzBH,KAAKC,MAAMzJ,MACV,4BACE,4BACE4J,UAAU,WACVkB,QAAStB,KAAKC,MAAMC,QAAQ7D,QAE5B,kBAAC,IAAD,CAAiB8D,KAAK,qBAOhC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4E,KAAM1F,GAAKC,KAAMwF,OAAK,EAACE,UAAWjF,KACzC,kBAAC,IAAD,CAAOgF,KAAM1F,GAAKQ,OAAQiF,OAAK,EAACE,UAAWC,KAC3C,kBAAC,IAAD,CAAOF,KAAM1F,GAAKS,MAAOgF,OAAK,EAACE,UAAWE,KAC1C,kBAAC,IAAD,CAAOH,KAAM1F,GAAKE,SAASC,KAAMsF,OAAK,EAACE,UAAWtB,KAClD,kBAAC,IAAD,CAAOqB,KAAM1F,GAAKE,SAASE,IAAKjC,IAAI,MAAMwH,UAAWhB,KACrD,kBAAC,IAAD,CACEe,KAAM1F,GAAKE,SAASG,QACpBoF,OAAK,EACLE,UAAWjB,KAEb,kBAAC,IAAD,CACEgB,KAAM1F,GAAKE,SAASI,KACpBnC,IAAI,OACJwH,UAAWhB,KAEb,kBAAC,IAAD,CAAOe,KAAM1F,GAAKO,OAAQoF,UAAWP,Y,GAnD/BpE,aA6EHC,eAbS,SAAAtJ,GAAK,MAAK,CAChCR,KAAMQ,EAAMR,KAAKA,OAGQ,SAAAyH,GAAQ,MAAK,CACtCiC,QAASK,YACP,CACElE,OAAQmE,GAAYnE,QAEtB4B,KAIWqC,CAGbuE,IC/FFM,IAAQC,IAAIC,IAAKC,KAKjB,IAAMC,GtBNeC,YAAYC,EAASC,IAAe,WAAf,EAAmBhO,IsBQ7DiO,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,GAAD,OAEFM,SAASC,eAAe,SrBAnB,SAAkB1N,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI0N,IAAIC,kBAAwBlO,OAAOC,SAASkO,MACpDC,SAAWpO,OAAOC,SAASmO,OAIvC,OAGFpO,OAAOqO,iBAAiB,OAAQ,WAC9B,IAAMhO,EAAK,UAAM6N,kBAAN,sBAEPpO,IAgEV,SAAiCO,EAAOC,GAEtCgO,MAAMjO,GACHK,KAAK,SAAA6N,GAEJ,IAAMC,EAAcD,EAASE,QAAQhI,IAAI,gBAEnB,MAApB8H,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CpO,UAAUC,cAAcoO,MAAMlO,KAAK,SAAAC,GACjCA,EAAakO,aAAanO,KAAK,WAC7BV,OAAOC,SAAS6O,aAKpB1O,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFA6N,CAAwB1O,EAAOC,GAI/BC,UAAUC,cAAcoO,MAAMlO,KAAK,WACjCO,QAAQC,IACN,gHAMJd,EAAgBC,EAAOC,MqBzB/BE,GAEAR,OAAOqO,iBAAiB,sBAAuB,SAAAvF,GAC7C7H,QAAQC,IAAI,uCACZ4H,EAAEkG,a","file":"static/js/main.e117dee0.chunk.js","sourcesContent":["const types = {\r\n  SET_CONTACTS_SEARCH_TERM: \"SET_CONTACTS_SEARCH_TERM\",\r\n  SET_CONTACTS: \"SET_CONTACTS\",\r\n  DELETE_CONTACT: \"DELETE_CONTACT\"\r\n};\r\nexport default types;\r\n","export default {\r\n  contacts: { contacts: null, filteredContacts: null, searchTerm: \"\" },\r\n  users: { user: null },\r\n  bitcoin: {\r\n    currency: null,\r\n    confirmedTransactionsData: null,\r\n    marketPricesData: null\r\n  }\r\n};\r\n","import types from \"../actions/contactsActions/contactsActionTypes\";\r\nimport initialState from \"../initialState\";\r\n\r\nexport default (state = initialState.contacts, action) => {\r\n  switch (action.type) {\r\n    case types.SET_CONTACTS:\r\n      if (action.isFiltered) {\r\n        return { ...state, filteredContacts: action.contacts };\r\n      } else {\r\n        return { ...state, contacts: action.contacts };\r\n      }\r\n\r\n    case types.DELETE_CONTACT:\r\n      const newContacts = state.contacts.filter(\r\n        contact => contact._id !== action.id\r\n      );\r\n      return { ...state, contacts: newContacts };\r\n\r\n    case types.SET_CONTACTS_SEARCH_TERM:\r\n      return { ...state, searchTerm: action.searchTerm };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const types = {\r\n  SET_USER: \"SET_USER\"\r\n};\r\nexport default types;\r\n","import types from \"../actions/userActions/userActionTypes\";\r\nimport initialState from \"../initialState\";\r\n\r\nexport default (state = initialState.users, action) => {\r\n  switch (action.type) {\r\n    case types.SET_USER:\r\n      return { ...state, user: action.user };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default {\r\n  SET_CURRENCY: \"SET_CURRENCY\",\r\n  SET_MARKET_PRICES_DATA: \"SET_MARKET_PRICES_DATA\",\r\n  SET_CONFIRMED_TRANSACTIONS_DATA: \"SET_CONFIRMED_TRANSACTIONS_DATA\"\r\n};\r\n","import types from \"../actions/bitcoinActions/bitcoinActionTypes\";\r\nimport initialState from \"../initialState\";\r\n\r\nexport default (state = initialState.bitcoin, action) => {\r\n  switch (action.type) {\r\n    case types.SET_CURRENCY:\r\n      return { ...state, currency: action.currency };\r\n\r\n    case types.SET_CONFIRMED_TRANSACTIONS_DATA:\r\n      return {\r\n        ...state,\r\n        confirmedTransactionsData: action.confirmedTransactionsData\r\n      };\r\n\r\n    case types.SET_MARKET_PRICES_DATA:\r\n      return { ...state, marketPricesData: action.marketPricesData };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"./contactsReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport bitcoinReducer from \"./bitcoinReducer\";\r\n\r\nconst combinedReducer = combineReducers({\r\n  contacts: contactReducer,\r\n  user: userReducer,\r\n  bitcoin: bitcoinReducer\r\n});\r\n\r\nexport default combinedReducer;\r\n","import thunk from \"redux-thunk\";\r\nimport reducer from \"./reducers\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nconst middlewares = [thunk];\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  middlewares.push(createLogger());\r\n}\r\n\r\nexport default () => createStore(reducer, applyMiddleware(...middlewares));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","function formatURL(url, params) {\r\n  Object.entries(params).forEach(([name, value]) => {\r\n    url = url.replace(`:${name}`, value.toString());\r\n  });\r\n  return url;\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n  var text = \"\";\r\n  var possible =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n\r\nfunction getTodayAsInputVal() {\r\n  var local = new Date();\r\n  local.setMinutes(local.getMinutes() - local.getTimezoneOffset());\r\n  return local.toJSON().slice(0, 10);\r\n}\r\n\r\nfunction createSortFuncTxt(txt, op) {\r\n  return (a, b) => {\r\n    if (op === \"+\") {\r\n      if (a[txt] > b[txt]) {\r\n        return 1;\r\n      } else if (a[txt] < b[txt]) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    } else {\r\n      if (a[txt] < b[txt]) {\r\n        return 1;\r\n      } else if (a[txt] > b[txt]) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default {\r\n  getRandomInt,\r\n  makeId,\r\n  getTodayAsInputVal,\r\n  createSortFuncTxt,\r\n  formatURL\r\n};\r\n","import utilService from \"../utils/utils\";\r\n\r\nexport default {\r\n  login,\r\n  signup,\r\n  logout,\r\n  createTransaction,\r\n  getLoggedUser\r\n};\r\n\r\nconst USERSKEY = \"bitcoinUsers\";\r\nconst LOGGEDINUSERKEY = \"bitcoinLoggedUser\";\r\n\r\nlet currUserId = _load(LOGGEDINUSERKEY) || null;\r\nlet users = _load(USERSKEY) || [];\r\n\r\nfunction getLoggedUser() {\r\n  const currUser = users.find(user => user._id === currUserId);\r\n  if (!currUser) Promise.reject(\"no logged user\");\r\n  return Promise.resolve(currUser);\r\n}\r\n\r\nfunction signup(username) {\r\n  if (users.find(u => u.username === username))\r\n    return Promise.reject(\r\n      \"username already exists, choose another one or log in\"\r\n    );\r\n  const user = {\r\n    _id: utilService.makeId(),\r\n    username,\r\n    coins: 100,\r\n    transactions: []\r\n  };\r\n  users.push(user);\r\n  saveUsers();\r\n  return login(username);\r\n}\r\n\r\nfunction login(username) {\r\n  const loggedUser = users.find(user => user.username === username);\r\n  _store(LOGGEDINUSERKEY, loggedUser._id);\r\n  currUserId = loggedUser._id;\r\n  return getLoggedUser();\r\n}\r\n\r\nfunction logout() {\r\n  currUserId = null;\r\n  _store(LOGGEDINUSERKEY, null);\r\n}\r\n\r\nfunction createTransaction(contact, amount) {\r\n  const transaction = {\r\n    toId: contact._id,\r\n    to: contact.name,\r\n    at: new Date(),\r\n    amount\r\n  };\r\n  const currUser = users.find(user => user._id === currUserId);\r\n  const currUserIdx = users.findIndex(user => user._id === currUserId);\r\n  currUser.transactions.push(transaction);\r\n  users.splice(currUserIdx, 1, currUser);\r\n  saveUsers();\r\n  return Promise.resolve(currUser);\r\n}\r\n\r\nfunction saveUsers() {\r\n  _store(USERSKEY, users);\r\n}\r\n\r\nfunction _store(key, any) {\r\n  localStorage[key] = JSON.stringify(any);\r\n}\r\n\r\nfunction _load(key) {\r\n  var str = localStorage[key] || \"null\";\r\n  return JSON.parse(str);\r\n}\r\n","import types from \"./userActionTypes\";\r\nimport userService from \"../../../services/userService\";\r\n\r\nconst _setUser = user => ({ type: types.SET_USER, user });\r\n\r\nconst loadLoggedUser = () => {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.getLoggedUser();\r\n      return dispatch(_setUser(user));\r\n    } catch (err) {\r\n      console.log(\"had problems with loading logged user\", err);\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nconst login = username => {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.login(username);\r\n      return dispatch(_setUser(user));\r\n    } catch (err) {\r\n      console.log(\"had problems with login\", err);\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nconst signup = username => {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.signup(username);\r\n      return dispatch(_setUser(user));\r\n    } catch (err) {\r\n      console.log(\"had problems with signup\", err);\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nconst logout = () => {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.logout();\r\n      return dispatch(_setUser(null));\r\n    } catch (err) {\r\n      console.log(\"had problems with logout\", err);\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nconst createTransaction = (contact, amount) => {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.createTransaction(contact, amount);\r\n      return dispatch(_setUser(user));\r\n    } catch (err) {\r\n      console.log(\"had problems with creating a transaction\", err);\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nexport default {\r\n  loadLoggedUser,\r\n  login,\r\n  signup,\r\n  logout,\r\n  createTransaction\r\n};\r\n","import Axios from \"axios\";\r\n\r\nexport default {\r\n  getCurrency,\r\n  getMarketPrice,\r\n  getConfirmedTransactions\r\n};\r\n\r\nasync function getCurrency() {\r\n  const res = await Axios.get(\r\n    \"https://blockchain.info/tobtc?currency=USD&value=1\"\r\n  );\r\n  return res.data;\r\n}\r\n\r\nasync function getMarketPrice() {\r\n  const res = await Axios.get(\r\n    \"https://api.blockchain.info/charts/market-price?timespan=6months&format=json&cors=true\"\r\n  );\r\n  const data = res.data;\r\n  const ratesByDay = data.values.map(day => day.y);\r\n  return ratesByDay;\r\n}\r\n\r\nasync function getConfirmedTransactions() {\r\n  const res = await Axios.get(\r\n    \"https://api.blockchain.info/charts/n-transactions?format=json&timespan=30days&cors=true\"\r\n  );\r\n  const data = res.data;\r\n  const transByDay = data.values.map(day => day.y);\r\n  return transByDay;\r\n}\r\n","import types from \"./bitcoinActionTypes\";\r\nimport bitcoinService from \"../../../services/bitcoinService\";\r\n\r\nconst _setCurrency = currency => ({ type: types.SET_CURRENCY, currency });\r\n\r\nconst loadCurrency = () => async dispatch => {\r\n  try {\r\n    const currency = await bitcoinService.getCurrency();\r\n    dispatch(_setCurrency(currency));\r\n  } catch (err) {\r\n    console.log(\"somthing went wrong\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst _setMarketPricesData = marketPricesData => ({\r\n  type: types.SET_MARKET_PRICES_DATA,\r\n  marketPricesData\r\n});\r\n\r\nconst loadMarketPricesData = () => async dispatch => {\r\n  try {\r\n    const data = await bitcoinService.getMarketPrice();\r\n    dispatch(_setMarketPricesData(data));\r\n  } catch (err) {\r\n    console.log(\"somthing went wrong\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst _setConfirmedTransactionsData = confirmedTransactionsData => ({\r\n  type: types.SET_CONFIRMED_TRANSACTIONS_DATA,\r\n  confirmedTransactionsData\r\n});\r\n\r\nconst loadConfirmedTransactionsData = () => async dispatch => {\r\n  try {\r\n    const data = await bitcoinService.getConfirmedTransactions();\r\n    dispatch(_setConfirmedTransactionsData(data));\r\n  } catch (err) {\r\n    console.log(\"somthing went wrong\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default {\r\n  loadCurrency,\r\n  loadMarketPricesData,\r\n  loadConfirmedTransactionsData\r\n};\r\n","export const URLS = {\r\n  HOME: \"/\",\r\n  CONTACTS: {\r\n    LIST: \"/contacts\",\r\n    ADD: \"/contacts/add\",\r\n    DETAILS: \"/contact/:id\",\r\n    EDIT: \"/contact/:id/edit\"\r\n  },\r\n  CHARTS: \"/charts\",\r\n  SIGNUP: \"/signup\",\r\n  LOGIN: \"/login\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport userActions from \"../../store/actions/userActions/userActions\";\r\nimport bitcoinActions from \"../../store/actions/bitcoinActions/bitcoinActions\";\r\n\r\nimport \"./HomePage.scss\";\r\nimport { URLS } from \"../../utils/consts\";\r\n\r\nclass HomePage extends Component {\r\n  async componentDidMount() {\r\n    try {\r\n      await this.props.actions.loadLoggedUser();\r\n    } catch (err) {\r\n      console.log(\"had problems\", err);\r\n    }\r\n    await this.props.actions.loadCurrency();\r\n  }\r\n  render() {\r\n    return (\r\n      <section>\r\n        <header>\r\n          <h1>Hello {this.props.user ? this.props.user.username : \"guest\"}</h1>\r\n          {this.props.user && (\r\n            <h4>\r\n              <FontAwesomeIcon icon={[\"fab\", \"bitcoin\"]} /> Coins:{\" \"}\r\n              {this.props.user.coins}\r\n            </h4>\r\n          )}\r\n          {this.props.currency !== null && (\r\n            <h4>\r\n              <FontAwesomeIcon icon={[\"fab\", \"btc\"]} /> BTC:{\" \"}\r\n              {this.props.currency}\r\n            </h4>\r\n          )}\r\n        </header>\r\n\r\n        {this.props.user && (\r\n          <main className=\"last-transcations\">\r\n            <h1>Last transactions</h1>\r\n            <ul>\r\n              {this.props.user.transactions.map(transaction => (\r\n                <li>{JSON.stringify(transaction)}</li>\r\n              ))}\r\n            </ul>\r\n          </main>\r\n        )}\r\n        {!this.props.user && (\r\n          <main>\r\n            <Link to={URLS.SIGNUP}>\r\n              signin for more information <FontAwesomeIcon icon=\"sign-in-alt\" />\r\n            </Link>\r\n          </main>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nHomePage.propTypes = {\r\n  user: PropTypes.object,\r\n  currency: PropTypes.number,\r\n  actions: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user.user,\r\n  currency: state.bitcoin.currency\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(\r\n    {\r\n      loadLoggedUser: userActions.loadLoggedUser,\r\n      loadCurrency: bitcoinActions.loadCurrency\r\n    },\r\n    dispatch\r\n  )\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomePage);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport swal from \"sweetalert\";\r\n\r\nimport { URLS } from \"../../utils/consts\";\r\nimport userActions from \"../../store/actions/userActions/userActions\";\r\n\r\nimport \"./SignupPage.scss\";\r\n\r\nclass Signup extends Component {\r\n  state = { username: \"\" };\r\n  onChangeInput = e => {\r\n    this.setState({ username: e.target.value });\r\n  };\r\n\r\n  onSignup = async () => {\r\n    try {\r\n      await this.props.actions.signup(this.state.username);\r\n      swal(\"Welcome!\", \"Successfully signed up!\", \"success\");\r\n      this.setState({ username: \"\" });\r\n      this.props.history.push(URLS.HOME);\r\n    } catch (err) {\r\n      swal(\"Had problems\", err, \"error\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <section className=\"signup-form\">\r\n        <h1>Sign Up</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Please enter your name...\"\r\n          value={this.state.username}\r\n          onChange={this.onChangeInput}\r\n          onKeyDown={e => {\r\n            if (e.keyCode === 13) this.onSignup();\r\n          }}\r\n        />\r\n        <button onClick={this.onSignup}>Sign up</button>\r\n\r\n        <Link to={URLS.LOGIN}>Already have a user?</Link>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nSignup.propTypes = {\r\n  actions: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(\r\n    {\r\n      signup: userActions.signup\r\n    },\r\n    dispatch\r\n  )\r\n});\r\n\r\nexport default connect(\r\n  undefined,\r\n  mapDispatchToProps\r\n)(Signup);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport swal from \"sweetalert\";\r\n\r\nimport { URLS } from \"../../utils/consts\";\r\nimport userActions from \"../../store/actions/userActions/userActions\";\r\n\r\nimport \"./LoginPage.scss\";\r\n\r\nclass Login extends Component {\r\n  state = { username: \"\" };\r\n  onChangeInput = e => {\r\n    this.setState({ username: e.target.value });\r\n  };\r\n\r\n  onLogin = async () => {\r\n    try {\r\n      await this.props.actions.login(this.state.username);\r\n      swal(\"Welcome!\", \"Successfully logged in!\", \"success\");\r\n      this.setState({ username: \"\" });\r\n      this.props.history.push(URLS.HOME);\r\n    } catch (err) {\r\n      swal(\"Had problems\", err, \"error\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <section className=\"login-form\">\r\n        <h1>Login</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Please enter your name...\"\r\n          value={this.state.username}\r\n          onChange={this.onChangeInput}\r\n          onKeyDown={e => {\r\n            if (e.keyCode === 13) this.onLogin();\r\n          }}\r\n        />\r\n        <button onClick={this.onLogin}>Log in</button>\r\n        <Link to={URLS.SIGNUP}>Is it your first entry?</Link>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  actions: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(\r\n    {\r\n      login: userActions.login\r\n    },\r\n    dispatch\r\n  )\r\n});\r\n\r\nexport default connect(\r\n  undefined,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import utilService from \"../utils/utils\";\n\nexport default {\n  getContacts,\n  getContactById,\n  deleteContact,\n  saveContact,\n  getEmptyContact\n};\n\nconst contacts = [\n  {\n    _id: \"5a56640269f443a5d64b32ca\",\n    name: \"Ochoa Hyde\",\n    email: \"ochoahyde@renovize.com\",\n    phone: \"+1 (968) 593-3824\"\n  },\n  {\n    _id: \"5a5664025f6ae9aa24a99fde\",\n    name: \"Hallie Mclean\",\n    email: \"halliemclean@renovize.com\",\n    phone: \"+1 (948) 464-2888\"\n  },\n  {\n    _id: \"5a56640252d6acddd183d319\",\n    name: \"Parsons Norris\",\n    email: \"parsonsnorris@renovize.com\",\n    phone: \"+1 (958) 502-3495\"\n  },\n  {\n    _id: \"5a566402ed1cf349f0b47b4d\",\n    name: \"Rachel Lowe\",\n    email: \"rachellowe@renovize.com\",\n    phone: \"+1 (911) 475-2312\"\n  },\n  {\n    _id: \"5a566402abce24c6bfe4699d\",\n    name: \"Dominique Soto\",\n    email: \"dominiquesoto@renovize.com\",\n    phone: \"+1 (807) 551-3258\"\n  },\n  {\n    _id: \"5a566402a6499c1d4da9220a\",\n    name: \"Shana Pope\",\n    email: \"shanapope@renovize.com\",\n    phone: \"+1 (970) 527-3082\"\n  },\n  {\n    _id: \"5a566402f90ae30e97f990db\",\n    name: \"Faulkner Flores\",\n    email: \"faulknerflores@renovize.com\",\n    phone: \"+1 (952) 501-2678\"\n  },\n  {\n    _id: \"5a5664027bae84ef280ffbdf\",\n    name: \"Holder Bean\",\n    email: \"holderbean@renovize.com\",\n    phone: \"+1 (989) 503-2663\"\n  },\n  {\n    _id: \"5a566402e3b846c5f6aec652\",\n    name: \"Rosanne Shelton\",\n    email: \"rosanneshelton@renovize.com\",\n    phone: \"+1 (968) 454-3851\"\n  },\n  {\n    _id: \"5a56640272c7dcdf59c3d411\",\n    name: \"Pamela Nolan\",\n    email: \"pamelanolan@renovize.com\",\n    phone: \"+1 (986) 545-2166\"\n  },\n  {\n    _id: \"5a5664029a8dd82a6178b15f\",\n    name: \"Roy Cantu\",\n    email: \"roycantu@renovize.com\",\n    phone: \"+1 (929) 571-2295\"\n  },\n  {\n    _id: \"5a5664028c096d08eeb13a8a\",\n    name: \"Ollie Christian\",\n    email: \"olliechristian@renovize.com\",\n    phone: \"+1 (977) 419-3550\"\n  },\n  {\n    _id: \"5a5664026c53582bb9ebe9d1\",\n    name: \"Nguyen Walls\",\n    email: \"nguyenwalls@renovize.com\",\n    phone: \"+1 (963) 471-3181\"\n  },\n  {\n    _id: \"5a56640298ab77236845b82b\",\n\n    name: \"Glenna Santana\",\n    email: \"glennasantana@renovize.com\",\n    phone: \"+1 (860) 467-2376\"\n  },\n  {\n    _id: \"5a56640208fba3e8ecb97305\",\n    name: \"Malone Clark\",\n    email: \"maloneclark@renovize.com\",\n    phone: \"+1 (818) 565-2557\"\n  },\n  {\n    _id: \"5a566402abb3146207bc4ec5\",\n    name: \"Floyd Rutledge\",\n    email: \"floydrutledge@renovize.com\",\n    phone: \"+1 (807) 597-3629\"\n  },\n  {\n    _id: \"5a56640298500fead8cb1ee5\",\n    name: \"Grace James\",\n    email: \"gracejames@renovize.com\",\n    phone: \"+1 (959) 525-2529\"\n  },\n  {\n    _id: \"5a56640243427b8f8445231e\",\n    name: \"Tanner Gates\",\n    email: \"tannergates@renovize.com\",\n    phone: \"+1 (978) 591-2291\"\n  },\n  {\n    _id: \"5a5664025c3abdad6f5e098c\",\n    name: \"Lilly Conner\",\n    email: \"lillyconner@renovize.com\",\n    phone: \"+1 (842) 587-3812\"\n  }\n];\n\nfunction sort(arr) {\n  return arr.sort((a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  });\n}\n\nfunction getContacts(searchTerm) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      var contactsToReturn = contacts;\n      if (searchTerm) {\n        contactsToReturn = filter(searchTerm);\n      }\n      resolve(sort(contactsToReturn));\n    }, 500);\n  });\n}\n\nfunction getContactById(id) {\n  return new Promise((resolve, reject) => {\n    const contact = contacts.find(contact => contact._id === id);\n    contact ? resolve(contact) : reject(`Contact id ${id} not found!`);\n  });\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(contact => contact._id === id);\n    if (index !== -1) {\n      contacts.splice(index, 1);\n    }\n\n    resolve(contacts);\n  });\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(c => contact._id === c._id);\n    if (index !== -1) {\n      contacts[index] = contact;\n    }\n    resolve(contact);\n  });\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => {\n    contact._id = utilService.makeId();\n    contacts.push(contact);\n    resolve(contact);\n  });\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact);\n}\n\nfunction getEmptyContact() {\n  return {\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  };\n}\n\nfunction filter(term) {\n  term = term.toLocaleLowerCase();\n  return contacts.filter(contact => {\n    return (\n      contact.name.toLocaleLowerCase().includes(term) ||\n      contact.phone.toLocaleLowerCase().includes(term) ||\n      contact.email.toLocaleLowerCase().includes(term)\n    );\n  });\n}\n","import types from \"./contactsActionTypes\";\r\nimport contactService from \"../../../services/contactService\";\r\n\r\nconst _setContactsSearchTerm = searchTerm => ({\r\n  type: types.SET_CONTACTS_SEARCH_TERM,\r\n  searchTerm\r\n});\r\n\r\nconst _setContacts = (contacts, isFiltered) => ({\r\n  type: types.SET_CONTACTS,\r\n  contacts,\r\n  isFiltered\r\n});\r\n\r\nconst loadContacts = (searchTerm = \"\") => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(_setContacts(null, !!searchTerm));\r\n      const res = await contactService.getContacts(searchTerm);\r\n      dispatch(_setContacts(res, !!searchTerm));\r\n      dispatch(_setContactsSearchTerm(searchTerm));\r\n      return res;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  try {\r\n    await contactService.deleteContact(id);\r\n    dispatch({ type: types.DELETE_CONTACT, id });\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default {\r\n  loadContacts,\r\n  deleteContact\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { debounce } from \"lodash\";\r\nimport \"./SearchBox.scss\";\r\n\r\nclass SearchBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchTerm: props.searchTerm\r\n    };\r\n\r\n    this.reportChange = debounce(this.reportChange, 300);\r\n  }\r\n\r\n  onSearchTermChange(searchTerm) {\r\n    this.setState({ searchTerm });\r\n    this.reportChange();\r\n  }\r\n\r\n  reportChange() {\r\n    this.props.onSearchTermChange(this.state.searchTerm);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"search-box\"\r\n        type=\"text\"\r\n        value={this.state.searchTerm}\r\n        onChange={e => this.onSearchTermChange(e.target.value)}\r\n        placeholder={this.props.placeholder}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSearchBox.propTypes = {\r\n  searchTerm: PropTypes.string.isRequired,\r\n  onSearchTermChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport utils from \"../../utils/utils\";\r\nimport { URLS } from \"../../utils/consts\";\r\n\r\nimport \"./ContactPreview.scss\";\r\n\r\nconst ContactPreview = ({ contact, onDelete, history }) => {\r\n  return (\r\n    <li\r\n      className=\"contact-item\"\r\n      onClick={() =>\r\n        history.push(\r\n          utils.formatURL(URLS.CONTACTS.DETAILS, { id: contact._id })\r\n        )\r\n      }\r\n    >\r\n      <img src={`https://robohash.org/${contact._id}?set=set5`} alt=\"contact\" />\r\n      {contact.name}\r\n\r\n      <div className=\"actions\">\r\n        <Link\r\n          to={utils.formatURL(URLS.CONTACTS.EDIT, { id: contact._id })}\r\n          onClick={e => e.stopPropagation()}\r\n        >\r\n          <FontAwesomeIcon icon=\"user-edit\" />\r\n        </Link>\r\n        <button\r\n          className=\"icon-btn\"\r\n          onClick={e => {\r\n            e.stopPropagation();\r\n            onDelete(contact._id);\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon=\"trash\" />\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactPreview.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  contact: PropTypes.object.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withRouter(ContactPreview);\r\n","import React from \"react\";\r\n\r\nimport \"./ContactList.scss\";\r\n\r\nimport ContactPreview from \"../ContactPreview/ContactPreview\";\r\n\r\nexport default props => {\r\n  const { contacts, onDelete } = props;\r\n  return (\r\n    <ul className=\"contact-list\">\r\n      {contacts.map(contact => (\r\n        <ContactPreview\r\n          key={contact._id}\r\n          contact={contact}\r\n          onDelete={onDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./ContactApp.scss\";\r\n\r\nimport contactsActions from \"../../store/actions/contactsActions/contactsActions\";\r\nimport { URLS } from \"../../utils/consts\";\r\n\r\nimport SearchBox from \"../../components/SearchBox/SearchBox\";\r\nimport ContactList from \"../../components/ContactList/ContactList\";\r\n\r\nclass ContactApp extends Component {\r\n  componentDidMount() {\r\n    if (!this.props.isContactsLoaded) {\r\n      this.props.actions.loadContacts();\r\n    }\r\n  }\r\n\r\n  onSearchTermChange = async searchTerm => {\r\n    await this.props.actions.loadContacts(searchTerm);\r\n  };\r\n\r\n  onContactDelete = async id => {\r\n    await this.props.actions.deleteContact(id);\r\n    console.log(this.props.contacts);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.user);\r\n    if (!this.props.user) return <Redirect to={URLS.SIGNUP} />;\r\n\r\n    return (\r\n      <section className=\"contact-app\">\r\n        <div className=\"top-bar\">\r\n          <SearchBox\r\n            searchTerm={this.props.contactsSearchTerm}\r\n            onSearchTermChange={this.onSearchTermChange}\r\n            placeholder=\"Search a contact...\"\r\n          />\r\n          <Link to={URLS.CONTACTS.ADD} className=\"add-contact-link\">\r\n            <FontAwesomeIcon icon=\"user-plus\" />\r\n          </Link>\r\n        </div>\r\n\r\n        {this.props.isContactsLoaded ? (\r\n          this.props.contacts.length > 0 ? (\r\n            <ContactList\r\n              contacts={this.props.contacts}\r\n              onDelete={this.onContactDelete}\r\n            />\r\n          ) : (\r\n            \"No contacts found\"\r\n          )\r\n        ) : (\r\n          \"Loading...\"\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nContactApp.propTypes = {\r\n  isContactsLoaded: PropTypes.bool.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n  user: PropTypes.object,\r\n  contactsSearchTerm: PropTypes.string,\r\n  actions: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const contacts = state.contacts.searchTerm\r\n    ? state.contacts.filteredContacts\r\n    : state.contacts.contacts;\r\n\r\n  return {\r\n    isContactsLoaded: contacts !== null,\r\n    contacts: contacts || [],\r\n    contactsSearchTerm: state.contacts.searchTerm,\r\n    user: state.user.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(\r\n    {\r\n      loadContacts: contactsActions.loadContacts,\r\n      deleteContact: contactsActions.deleteContact\r\n    },\r\n    dispatch\r\n  )\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContactApp);\r\n","import React, { Component } from \"react\";\r\n\r\nimport contactService from \"../../services/contactService\";\r\n\r\nimport \"./ContactDetails.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { URLS } from \"../../utils/consts\";\r\nimport utils from \"../../utils/utils\";\r\nexport default class ContactDetails extends Component {\r\n  state = {\r\n    contact: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const contact = await contactService.getContactById(id);\r\n    this.setState({ contact });\r\n  }\r\n\r\n  onDelete = async () => {\r\n    await contactService.deleteContact(this.state.contact.id);\r\n    this.props.history.push(URLS.CONTACTS.LIST);\r\n  };\r\n\r\n  render() {\r\n    const { contact } = this.state;\r\n    return (\r\n      contact && (\r\n        <section className=\"contact-details\">\r\n          <div className=\"actions\">\r\n            <Link to={URLS.CONTACTS.LIST}>\r\n              <FontAwesomeIcon icon=\"chevron-left\" />\r\n            </Link>\r\n            <Link to={utils.formatURL(URLS.CONTACTS.EDIT, { id: contact._id })}>\r\n              <FontAwesomeIcon icon=\"edit\" />\r\n            </Link>\r\n            <button\r\n              className=\"icon-btn\"\r\n              onClick={() => {\r\n                this.onDelete();\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon=\"trash\" />\r\n            </button>\r\n          </div>\r\n          <h1> {contact.name}</h1>\r\n          <img\r\n            src={`https://robohash.org/${contact._id}?set=set5`}\r\n            alt=\"contact\"\r\n          />\r\n          <h4>\r\n            <FontAwesomeIcon icon=\"at\" /> {contact.email}\r\n          </h4>\r\n          <h4>\r\n            <FontAwesomeIcon icon=\"phone\" /> {contact.phone}\r\n          </h4>\r\n        </section>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport contactService from \"../../services/contactService\";\r\n\r\nimport \"./ContactEdit.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { URLS } from \"../../utils/consts\";\r\n\r\nexport default class ContactEdit extends Component {\r\n  state = {\r\n    contact: null\r\n  };\r\n\r\n  onDelete = async () => {\r\n    await contactService.deleteContact(this.state.contact.id);\r\n    this.props.history.push(URLS.CONTACTS.LIST);\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    if (id) {\r\n      const contact = await contactService.getContactById(id);\r\n      this.setState({ contact });\r\n    } else this.setState({ contact: contactService.getEmptyContact() });\r\n  }\r\n\r\n  handleChange = e => {\r\n    const newState = { ...this.state.contact };\r\n    newState[e.target.name] = e.target.value;\r\n    this.setState({ contact: newState });\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    await contactService.saveContact(this.state.contact);\r\n    const { history } = this.props;\r\n    history.push(URLS.CONTACTS.LIST);\r\n  };\r\n\r\n  render() {\r\n    const { contact } = this.state;\r\n    return (\r\n      contact && (\r\n        <section className=\"contact-edit\">\r\n          <div className=\"actions\">\r\n            <Link to={URLS.CONTACTS.LIST}>\r\n              <FontAwesomeIcon icon=\"chevron-left\" />\r\n            </Link>\r\n            <button\r\n              className=\"icon-btn\"\r\n              onClick={() => {\r\n                this.onDelete();\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon=\"trash\" />\r\n            </button>\r\n          </div>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div>\r\n              <FontAwesomeIcon icon=\"user\" />\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n                value={this.state.contact.name}\r\n              />\r\n            </div>\r\n            <div>\r\n              <FontAwesomeIcon icon=\"at\" />\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                onChange={this.handleChange}\r\n                value={this.state.contact.email}\r\n              />\r\n            </div>\r\n            <div>\r\n              <FontAwesomeIcon icon=\"phone\" />\r\n              <input\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                onChange={this.handleChange}\r\n                value={this.state.contact.phone}\r\n              />\r\n            </div>\r\n            <button className=\"icon-btn\">\r\n              <FontAwesomeIcon icon=\"save\" />\r\n            </button>\r\n          </form>\r\n        </section>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Sparklines, SparklinesLine, SparklinesSpots } from \"react-sparklines\";\r\n\r\nimport \"./ChartContainer.scss\";\r\n\r\nexport default props => {\r\n  const { data, color, title, subTitle } = props;\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      <h4>{subTitle}</h4>\r\n      <Sparklines data={data}>\r\n        <SparklinesLine color={color} />\r\n        <SparklinesSpots />\r\n      </Sparklines>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport bitcoinActions from \"../../store/actions/bitcoinActions/bitcoinActions\";\r\n\r\nimport \"./ChartsPage.scss\";\r\n\r\nimport ChartContainer from \"../../components/ChartContainer/ChartContainer\";\r\n\r\nclass Charts extends Component {\r\n  async componentDidMount() {\r\n    await Promise.all([\r\n      this.props.actions.loadConfirmedTransactionsData(),\r\n      this.props.actions.loadMarketPriceData()\r\n    ]);\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <section className=\"charts-page\">\r\n        <h1>Charts</h1>\r\n        {this.props.marketPriceData && (\r\n          <ChartContainer\r\n            data={this.props.marketPriceData}\r\n            color=\"lightblue\"\r\n            title=\"Market Price\"\r\n            subTitle=\"Last 6 Monthes\"\r\n          />\r\n        )}\r\n        {this.props.confirmedTransactionsData && (\r\n          <ChartContainer\r\n            data={this.props.confirmedTransactionsData}\r\n            color=\"orange\"\r\n            title=\"Confirmed Transactions\"\r\n            subTitle=\"Last 30 Days\"\r\n          />\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nCharts.propTypes = {\r\n  confirmedTransactionsData: PropTypes.array,\r\n  marketPriceData: PropTypes.array,\r\n  actions: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  marketPriceData: state.bitcoin.marketPricesData,\r\n  confirmedTransactionsData: state.bitcoin.confirmedTransactionsData\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(\r\n    {\r\n      loadMarketPriceData: bitcoinActions.loadMarketPricesData,\r\n      loadConfirmedTransactionsData:\r\n        bitcoinActions.loadConfirmedTransactionsData\r\n    },\r\n    dispatch\r\n  )\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Charts);\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  NavLink\n} from \"react-router-dom\";\n\nimport \"./assets/scss/app.scss\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport userActions from \"./store/actions/userActions/userActions\";\n\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport SignupPage from \"./pages/SignupPage/SignupPage\";\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\nimport ContactApp from \"./pages/ContactAppPage/ContactApp\";\nimport ContactDetails from \"./pages/ContactDetailsPage/ContactDetails\";\nimport ContactEdit from \"./pages/ContactEditPage/ContactEdit\";\nimport Charts from \"./pages/ChartsPage/ChartsPage\";\nimport { URLS } from \"./utils/consts\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <nav>\n            <ul className=\"main-nav\">\n              <li>\n                <NavLink exact to={URLS.HOME}>\n                  <FontAwesomeIcon icon=\"home\" />\n                </NavLink>\n              </li>\n              <li>\n                <NavLink exact to={URLS.CONTACTS.LIST}>\n                  <FontAwesomeIcon icon=\"address-book\" />\n                </NavLink>\n              </li>\n              <li>\n                <NavLink exact to={URLS.CHARTS}>\n                  <FontAwesomeIcon icon=\"chart-line\" />\n                </NavLink>\n              </li>\n              {this.props.user && (\n                <li>\n                  <button\n                    className=\"icon-btn\"\n                    onClick={this.props.actions.logout}\n                  >\n                    <FontAwesomeIcon icon=\"sign-out-alt\" />\n                  </button>\n                </li>\n              )}\n            </ul>\n          </nav>\n\n          <Switch>\n            <Route path={URLS.HOME} exact component={HomePage} />\n            <Route path={URLS.SIGNUP} exact component={SignupPage} />\n            <Route path={URLS.LOGIN} exact component={LoginPage} />\n            <Route path={URLS.CONTACTS.LIST} exact component={ContactApp} />\n            <Route path={URLS.CONTACTS.ADD} key=\"add\" component={ContactEdit} />\n            <Route\n              path={URLS.CONTACTS.DETAILS}\n              exact\n              component={ContactDetails}\n            />\n            <Route\n              path={URLS.CONTACTS.EDIT}\n              key=\"edit\"\n              component={ContactEdit}\n            />\n            <Route path={URLS.CHARTS} component={Charts} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nApp.propTypes = {\n  actions: PropTypes.object.isRequired,\n  user: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  user: state.user.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      logout: userActions.logout\n    },\n    dispatch\n  )\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","/* eslint import/first: 0 */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Load fortawesome icons packages\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nlibrary.add(fas, fab);\n\nimport \"./assets/scss/index.scss\";\nimport App from \"./App\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n\nwindow.addEventListener(\"beforeinstallprompt\", e => {\n  console.log(\"beforeinstallprompt event has fired\");\n  e.prompt();\n});\n"],"sourceRoot":""}